//= require map-tz-corrections

var WIDTH = 600
var HEIGHT = 500

var CsvPathTemplate = '/issues/ISSUE_ID/show_num_copies_by_council.csv'

var svg
var councils
var legend
var tooltip
var data = {} // mapping from council name to number of copies

function correct(tz_council_name) {
  return TzCorrections[tz_council_name] || tz_council_name
}

function start_load_csv(url) {
  d3.csv(url)
    .row(function(d) { return { council: d.Council, value: +d['Number of Copies'] } })
    .get(function(err, rows) {
      if (err) return console.warn(err)
      display_data(rows)
    })
}

function display_map(geometry) {
  tooltip = d3.tip()
    .attr('class', 'map-tooltip')
    .offset([ -8, 0 ])
    .html(function(d) { return [
      '<h4>', correct(d.id), '</h4>',
      '<div class="count">', data[correct(d.id)] || 0, ' Copies</div>'
    ].join('') })

  svg = d3.select('#map').append('svg')
    .attr('width', WIDTH)
    .attr('height', HEIGHT)
    .call(tooltip)

  // lots of this is copy/pasted to clubs-map.js
  var projection = d3.geo.conicConformal()
    .center([ 35, -6.26 ])
    .rotate([ 0, 0 ])
    .parallels([ -3, -9 ])
    .scale(2590)
    .translate([ WIDTH / 2 - 50, HEIGHT / 2 ])

  var path = d3.geo.path().projection(projection)

  councils = svg.append('g').attr('class', 'councils')

  councils.selectAll('path')
    .data(topojson.feature(geometry, geometry.objects.Districts).features)
    .enter().append('path')
      .attr('data-name', function(d) { return correct(d.id) })
      .attr('d', path)
      .style('stroke', 'black')
      .style('stroke-width', '0.2')
      .on('mouseover', function(d) { d3.select(this).style('stroke-width', '2'); tooltip.show.call(this, d) })
      .on('mouseout', function(d) { d3.select(this).style('stroke-width', '0.2'); tooltip.hide.call(this, d) })

  $('form#map-data').prop('disabled', false)
  on_submit()
}

function display_data(rows) {
  var values = rows
    .map(function(row) { return row.value })
    .filter(function(value) { return value > 0 })
    .sort(function(a, b) { return a - b })

  var colorScale = d3.scale.quantile()
    .domain(values)
    .range(['#edf8fb', '#b3cde3', '#8c96c6', '#88419d'])

  data = {} // Map from council name to value
  var unmatchedCouncils = {}
  rows.forEach(function(row) {
    var council = correct(row.council)
    data[council] = row.value
    unmatchedCouncils[council] = null
  })

  councils.selectAll('path')
    .style('fill', function(d) {
      var council = correct(d.id)
      var value = data[council]
      if (!value) {
        //console.log('Council "' + council + '" is on map but not in CSV')
        return 'white'
      }
      delete unmatchedCouncils[council]
      return colorScale(value)
    })

  Object.keys(unmatchedCouncils).forEach(function(council) {
    //console.log('Council "' + council + '" is in CSV but not on map')
  })

  if (legend) legend.remove()

  var legendFontSize = 14
  var legendBoxSize = legendFontSize - 1
  var legendSpacing = 6
  var legendLineHeight = legendFontSize + legendSpacing

  legend = svg.append('g')
    .attr('class', 'legend')
    .attr('transform', 'translate(420, 0)');

  legend.selectAll('rect')
    .data(colorScale.range())
    .enter().append('rect')
      .attr('y', function(d, i) { return i * legendLineHeight })
      .attr('width', legendBoxSize)
      .attr('height', legendBoxSize)
      .style('fill', function(color) { return color })

  legend.selectAll('text')
    .data(colorScale.range().map(function(color) {
      var d = colorScale.invertExtent(color)
      d[0] = d[0] || values[0]
      d[1] = d[1] || values[values.length - 1]
      // For some reason, sometimes we get fractions from the above logic
      d[0] = Math.round(d[0] + 0.25)
      d[1] = Math.round(d[1] + 0.25)
      return d
    }))
    .enter().append('text')
      .attr('x', legendBoxSize + legendSpacing)
      .attr('y', function(d, i) { return i * legendLineHeight + legendFontSize - 2 }) // the -2 looks nice
      .text(function(d, i) {
        if (i != colorScale.range().length - 1) { // colorScale retvals are [min,max)
          d[1] -= 1
        }
        return d[0] + ' to ' + d[1]
      })
}

d3.json('<%= asset_path('councils.json') %>', function(err, geometry) {
  if (err) return console.warn(err)
  display_map(geometry)
})

$(document).on('submit', 'form#map-data', function(ev) {
  ev.preventDefault()
  on_submit()
})

$(document).on('change', 'form#map-data select', function(ev) {
  on_submit()
})

function on_submit() {
  var $form = $('form#map-data')
  var issue_id = $form.find('[name="filter[issue_id]"]').val()
  var url = CsvPathTemplate.replace('ISSUE_ID', issue_id)
  start_load_csv(url)
}
