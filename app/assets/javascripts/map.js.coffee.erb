WIDTH = 600
HEIGHT = 500

CsvPathTemplate = '/issues/ISSUE_ID/show_num_copies_by_council.csv'

svg = undefined
councils = undefined
legend = undefined
tooltip = null
data = {} # mapping from council name to number of copies

TzCorrections =
  Songea: 'Songea Rural'
  Butiam: 'Butiama'
  'Mafinga Township Authority': 'Mafinga'
  'Makambako Township Authority': 'Makambako'
  'Masasi  Township Authority': 'Masasi Urban'
  'Handeni Mji': 'Handeni Urban'
  'Kasulu Township Authority': 'Kasulu Urban'

correct = (tz_council_name) ->
  TzCorrections[tz_council_name] || tz_council_name

# asset_path() seems to have trouble finding ".json" files. Renamed to .js.
d3.json '<%= asset_path('districts-topojson.js') %>', (err, geometry) ->
  return console.warn(err) if err
  display_map(geometry)

start_load_csv = (url) ->
  d3.csv(url)
    .row((d) -> { council: d.Council, value: +d['Number of Copies'] })
    .get (err, rows) ->
      return console.warn(err) if err
      display_data(rows)

display_map = (geometry) ->
  tip = d3.tip()
    .attr('class', 'map-tooltip')
    .offset([ -8, 0 ])
    .html (d) -> """
      <h4>#{correct(d.id)}</h4>
      <div class="count">#{data[correct(d.id)] || 0} Copies</div>
    """

  svg = d3.select('#map').append('svg')
    .attr('width', WIDTH)
    .attr('height', HEIGHT)
    .call(tip)

  projection = d3.geo.conicConformal()
    .center([ 35, -6.26 ])
    .rotate([ 0, 0 ])
    .parallels([ -3, -9 ])
    .scale(2590)
    .translate([ WIDTH / 2 - 50, HEIGHT / 2 ])

  path = d3.geo.path().projection(projection)

  councils = svg.append('g').attr('class', 'councils')

  councils.selectAll('path')
    .data(topojson.feature(geometry, geometry.objects.Districts).features)
    .enter().append('path')
      .attr('data-name', (d) -> correct(d.id))
      .attr('d', path)
      .style('stroke', 'black')
      .style('stroke-width', '0.2')
      .on('mouseover', (d) -> d3.select(@).style('stroke-width', '2'); tip.show.call(@, d))
      .on('mouseout', (d) -> d3.select(@).style('stroke-width', '0.2'); tip.hide.call(@, d))

  $('form#map-data').prop('disabled', false)
  on_submit()

display_data = (rows) ->
  values = (row.value for row in rows when row.value > 0).sort((a, b) -> a - b)
  minValue = values[0]
  maxValue = values[values.length - 1]

  colorScale = d3.scale.quantile()
    .domain(values)
    .range(['#edf8fb', '#b3cde3', '#8c96c6', '#88419d'])

  data = {} # Map from council name to value
  (data[row.council] = row.value) for row in rows

  councils.selectAll('path')
    .transition()
      .style('fill', (d) -> data[correct(d.id)] && colorScale(data[correct(d.id)]) || 'white')

  legend.remove() if legend

  legendFontSize = 14
  legendBoxSize = legendFontSize - 1
  legendSpacing = 6
  legendLineHeight = legendFontSize + legendSpacing

  legend = svg.append('g')
    .attr('class', 'legend')
    .attr('transform', 'translate(420, 0)');

  legend.selectAll('rect')
    .data(colorScale.range())
    .enter().append('rect')
      .attr('y', (d, i) -> i * legendLineHeight)
      .attr('width', legendBoxSize)
      .attr('height', legendBoxSize)
      .style('fill', (color) -> color)

  legend.selectAll('text')
    .data colorScale.range().map (color) ->
      d = colorScale.invertExtent(color)
      d[0] ||= values[0]
      d[1] ||= values[values.length - 1]
      # For some reason, sometimes we get fractions from the above logic
      d[0] = Math.round(d[0] + 0.25)
      d[1] = Math.round(d[1] + 0.25)
      d
    .enter().append('text')
      .attr('x', legendBoxSize + legendSpacing)
      .attr('y', (d, i)  -> i * legendLineHeight + legendFontSize - 2) # the -2 looks nice
      .text (d, i) ->
        if i != colorScale.range().length - 1 # colorScale retvals are [min,max)
          d[1] -= 1
        "#{d[0]} to #{d[1]}"

$(document).on 'submit', 'form#map-data', (ev) ->
  ev.preventDefault()
  on_submit()

$(document).on 'change', 'form#map-data select', (ev) ->
  on_submit()

on_submit = ->
  $form = $('form#map-data')
  issue_id = $form.find('[name="filter[issue_id]"]').val()
  url = CsvPathTemplate.replace('ISSUE_ID', issue_id)
  start_load_csv(url)
