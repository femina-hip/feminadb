= render_pretty_header('Customers') do
  %p
    Each Customer can have
    = glossary_term('Standing Orders')
    to periodical
    = link_to 'Publications', publications_path
    and
    = glossary_term('Orders')
    for Publications' individual Issues.  Customers also have Notes.

= render(:partial => 'application/customer_search', :locals => { :path => customers_path, :num_results => @customers.total_entries })

%table.customers
  %thead
    %tr
      %th Region
      %th District
      %th Type
      %th Customer
      - @publications.each do |publication|
        %th
          %abbr{:title => "Standing Orders for #{publication.name}, or Waiting Orders if there is a \"W\""}= publication.name
  %tbody
    - @customers.each do |customer|
      %tr{:class => cycle('odd', 'even')}
        %td.region= customer.region.name
        %td.district= customer.district
        %td.type
          %abbr{:title => customer.type.description}= customer.type.name
        %td.customer-name
          .cut-off= link_to(customer.name, customer)
        - @publications.each do |publication|
          %td.standing-orders
            - if so = customer.standing_orders.detect{|so| so.publication_id == publication.id}
              = so.num_copies
            - elsif wo = customer.waiting_orders.detect{|wo| wo.publication_id == publication.id}
              = "#{wo.num_copies}W"
    - if current_user.has_role? 'edit-customers'
      %tr
        %td.add{:colspan => 4 + @publications.length}
          = link_to 'Create New Customer', new_customer_path

= will_paginate(@customers)

%p.actions
  = link_to 'Export Data to Excel', customers_path(params.slice(:q).merge(:format => :csv))
  - if current_user.has_role?('edit-orders')
    |
    = link_to('Create Orders for everybody in this list', new_bulk_order_creator_path(:bulk_order_creator => {:search_string => params[:q]}))
