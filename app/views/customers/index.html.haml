= render_pretty_header('Customers') do
  %p
    Each Customer can have
    = glossary_term('Standing Orders')
    to periodical
    = link_to 'Publications', publications_path
    and
    = glossary_term('Orders')
    for Publications' individual Issues.  Customers also have Notes.

= render(:partial => 'application/customer_search', :locals => { :path => customers_path, :search => @search })

%table.customers
  %thead
    %tr
      %th Region
      %th Council
      %th Type
      %th Club
      - @publications.each do |publication|
        %th
          %abbr{:title => "Standing Orders for #{publication.name}"}= publication.name
      %th Customer
  %tbody
    = render(collection: @customers, partial: 'tr', as: :customer, locals: { publications: @publications })
    - if current_user.has_role? 'edit-customers'
      %tr
        %td.add{:colspan => 5 + @publications.length}
          = link_to 'Create New Customer', new_customer_path

= will_paginate(@customers)

= customer_tags_field_data
.customer-search-result{'data-q' => params[:q], 'data-page' => (params[:page] || '1'), 'data-customer-ids' => @customer_ids.join(' ')}

%p.actions
  = link_to 'Export Data to Excel', customers_path(q: params[:q], format: :csv)
  - if current_user.has_role?('edit-orders')
    |
    = link_to('Create Orders for everybody in this list', new_bulk_order_creator_path(:bulk_order_creator => {:search_string => params[:q]}))
