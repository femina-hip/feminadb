-# Required variables: "customer" => a customer
%table.customer
  %thead.title
    %tr
      %th{:colspan => 2}
        Customer:
        =h customer.name
  %thead
    %tr
      %th{:colspan => 2} General Information
  %tbody
    %tr{:class => cycle('odd', 'even')}
      %th Name
      %td= h customer.name
    %tr{:class => cycle('odd', 'even')}
      %th Type
      %td
        = h customer.type.name
        = '-'
        = h customer.type.description
    %tr{:class => cycle('odd', 'even')}
      %th Region
      %td= h customer.region.name
    %tr{:class => cycle('odd', 'even')}
      %th District
      %td= h customer.district

  %thead
    %tr
      %th{:colspan => 2} Delivery Details
  %tbody
    - reset_cycle
    %tr{:class => cycle('odd', 'even')}
      %th Delivery Method
      %td
        = h customer.delivery_method.abbreviation
        = '-'
        = h customer.delivery_method.name
        = h "(#{customer.delivery_method.description})"
    %tr{:class => cycle('odd', 'even')}
      %th
        Deliver Via
        - tooltip do
          %p Company to which Femina will send Issues
      %td= h customer.deliver_via
    %tr{:class => cycle('odd', 'even')}
      %th
        Address
        - tooltip do
          %p Instructions for where to actually deliver
      %td= h customer.address
    %tr{:class => cycle('odd', 'even')}
      %th
        Route
        - tooltip do
          %p
            Order in which to deliver. This should be a name of a route and
            then a number: for instance, <b>city07</b>.
      %td= h customer.route
    %tr{:class => cycle('odd', 'even')}
      %th PO Box
      %td= h customer.po_box
  %thead
    %tr
      %th{:colspan => 2} Contact Details
  %tbody
    - reset_cycle
    %tr{:class => cycle('odd', 'even')}
      %th Name/Position
      %td= "#{h(customer.contact_name)}#{customer.contact_position ? ', ' + h(customer.contact_position) : ''}"
    %tr{:class => cycle('odd', 'even')}
      %th Telephone
      %td= telephones_string(customer)
    %tr{:class => cycle('odd', 'even')}
      %th Fax
      %td= h customer.fax
    %tr{:class => cycle('odd', 'even')}
      %th Email
      %td= emails_string(customer)
    %tr{:class => cycle('odd', 'even')}
      %th Website
      %td= website_string(customer)
    - if current_user.has_role? 'edit-customers'
      %tr{:class => 'footer'}
        %td{:colspan => 2, :class => 'add'}
          = link_to 'Edit Customer', edit_customer_path(customer)
      %tr{:class => 'footer'}
        %td{:colspan => 2, :class => 'delete'}
          = button_to 'Delete Customer', customer_path(customer), :confirm => 'Are you sure you want to delete this Customer?', :method => :delete

= render :partial => 'customer_standing_orders/standing_orders', :locals => { :standing_orders => customer.standing_orders }

= render :partial => 'customer_waiting_orders/waiting_orders', :locals => { :waiting_orders => customer.waiting_orders }

= render :partial => 'customer_orders/orders', :locals => { :orders => customer.orders }

= render :partial => 'special_order_lines', :locals => { :special_order_lines => customer.special_order_lines }

- if customer.club
  = render :partial => 'clubs/club', :locals => { :club => customer.club }
- else
  %p
    There is no Club attached to this Customer.
    - if logged_in?
      = link_to 'Add Club information', new_club_path(:customer_id => customer.id)

= render :partial => 'notes', :locals => { :customer => customer }

= render :partial => 'add_tag', :locals => { :customer => customer }
