= render_pretty_header('Link Customer to SurveyMonkey') do
  %p
    Make survey responses show up in Customer info.

- if @survey_response.nil?
  %p
    Contratulations! There are no more Survey Responses to link in #{@region_name}.
    - if @region_name != 'Tanzania'
      = link_to('Link the rest of Tanzania', edit_survey_response_path('random-unlinked'))
      if you're having fun.
- else
  - if @n_missing_survey_responses
    %p.progress
      - if @n_missing_survey_responses == 1
        This is the final unlinked Survey Response in #{@region_name}.
      - else
        There are only #{@n_missing_survey_responses} unlinked Survey Responses in #{@region_name}. Keep linking!

  %p Please find the Customer for the following survey response:

  = error_messages_for(:survey_response)

  = form_for(@survey_response) do |f|
    %p
      %strong Customer:
      %br
      -# hidden field allows submitting empty customer_id
      = f.hidden_field(:customer_id, value: '')
      -# customer_id_field allows choosing a customer id
      = f.customer_id_field(:customer_id)

    %input{type: 'hidden', name: 'redirect_to', value: @redirect_to}
    %button.debounced{type: 'submit', class: 'a-customer'} Add Survey Response to Customer
    - if current_user.has_role?('admin')
      .mark-spam{style: 'margin-top: 1rem'}
        %small ... (admin-only, can't be undone) if there will never be a Customer for this Response,
        %button.debounced{type: 'submit', class:'no-customer', 'data-confirm': 'Are you sure you want to hide this Survey Response from FeminaDB forever?'} Mark as Spam

    %p
      %strong Survey Response:

    = render(partial: 'survey_responses/survey_response', locals: { survey_response: @survey_response })
