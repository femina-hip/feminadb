= render_pretty_header 'Order List' do
  %p
    This is the list of Orders for
    %strong= @issue.full_name
    %span> .

  %p
    In this list, you can see the intended recipients of this Issue. If you
    are logged in you may edit the quantities. You may also delete Orders.
    To add new Orders, or to edit anything besides the quantities, browse
    to
    = link_to('the Customers list', customers_path)
    and edit from there.

= render(:partial => 'application/customer_search', :locals => { :path => issue_orders_path(@issue), :search => @search, :num_results => (!params[:all] && @orders.total_entries) })

%p
  - if params[:all]
    Even Customers without Orders are in this list.
    Create Orders by changing the quantities from 0 to something else.
    You can also
    = link_to('hide Customers who have no Orders.', issue_orders_path(@issue, params.slice(:q)))
  - else
    The only Customers shown are the ones with Orders. You can also
    = link_to('include Customers without any Orders yet, to add some.', issue_orders_path(@issue, params.slice(:q).merge(:all => true)))

%table.issue-orders
  %thead
    %tr
      %th
        %abbr{:title => 'Delivery Method'} DM
      %th Region
      %th District
      %th Customer
      %th Qty
  %tbody
    - @orders.each do |o|
      %tr{:class => cycle('odd', 'even')}
        %td.delivery-method= o.delivery_method
        %td.region= o.region
        %td.district= o.district
        %td.customer
          .cut-off
            - if o.customer_id
              = link_to(o.customer_name, customer_path(o.customer_id))
            - else
              = o.customer_name
        %td.qty
          - if current_user.has_role?('edit-orders')
            %span.editable-order{ |
              'data-id' => o.id,  |
              'data-customer-id' => o.customer.id || '',
              'data-issue-id' => @issue.id,
              'data-customer-name' => o.customer.name,
              'data-comments' => o.comments,
              'data-order-date' => o.order_date,
              'data-region' => o.region,
              'data-district' => o.district,
              'data-delivery-method' => o.delivery_method,
              'data-delivery-address' => o.delivery_address,
              'data-contact-details' => o.contact_details,
            }= o.num_copies > 0 && o.num_copies.to_s || ''
          - else
            %span= o.num_copies > 0 && o.num_copies.to_s || ''
= will_paginate(@orders)

%p.actions
  = link_to('Export Data to Excel', issue_orders_path(@issue, params.slice(:q).merge(:format => :csv)))
  - if current_user.has_role?('edit-orders')
    |
    = link_to('Create Orders for an Issue using this list', new_bulk_order_creator_path(:bulk_order_creator => {:from_issue_id => @issue.id, :search_string => params[:q]}))
