= render_pretty_header 'Bulk Order Creation' do
  %p
    You are preparing to create many Orders at once.
    There will be a total of
    %b= @customers.size
    Customers getting new orders.

  - if @creation_type == :customers
    %p= "You found these Customers by searching for <q><b>#{h(params[:q])}</b></q>."

  - elsif @creation_type == :publication
    %p= "You found these Customers by searching for <q><b>#{h(params[:q])}</b></q> on the list of Standing Orders for <b>#{h(@from_publication.name)}</b>."

  - else
    %p= "You found these Customers by searching for <q><b>#{h(params[:q])}</b></q> on the list of Orders for <b>#{h(@from_issue.full_name)}</b>."

  %p
    After filling in this information, you may browse to the list of new
    Orders, from which you can edit the quantities.

- form_tag({:action => :run}) do
  %div
    = hidden_field_tag 'q', params[:q]
    - if params[:from_publication_id]
      = hidden_field_tag 'from_publication_id', params[:from_publication_id]
    - elsif params[:from_issue_id]
      = hidden_field_tag 'from_issue_id', params[:from_issue_id]
  %div
    %p
      Prepare Orders for this Issue:
      = issue_select_tag 'issue_id'

    %p
      Number of Copies on each Order:
      - if @creation_type == :customers
        = text_field_tag 'num_copies', params[:num_copies]
      - else
        %br/
        %label
          = radio_button_tag 'enable_num_copies', false, params[:num_copies].to_i <= 0
          Copy the quantities from the Orders we are using as templates
        %br/
        %label
          = radio_button_tag 'enable_num_copies', true, params[:num_copies].to_i > 0
          Make all new Orders have the same number of copies:
        = text_field_tag 'num_copies', params[:num_copies]

    %p
      %label
        Date to set on each Order:
        = input_tag('order_date', nil, :value => Date.today, :type => 'text', :class => 'date_field')

    %p
      %label
        Delivery Method for each Order:
        = select_tag 'delivery_method_id', '<option value="">Use Customer defaults</option>' + options_from_collection_for_select(DeliveryMethod.where(:deleted_at => nil).order(:abbreviation).all, :id, :full_name, params[:delivery_method_id].to_i)

    %p
      %label
        Comment to write on each Order:
        = text_field_tag 'comments', params[:comments]

    %p
      = submit_tag 'Create Orders (may take time)'
