global
  log /dev/log local0
  chroot /var/lib/haproxy
  user haproxy
  group haproxy
  tune.ssl.default-dh-param 2048

defaults
  mode http
  log global
  option httplog
  option http-server-close
  option forwardfor
  maxconn 200
  timeout connect 5000
  timeout client  50000
  timeout server  50000

frontend http_redirect
  bind 0.0.0.0:80

  redirect scheme https if !{ ssl_fc } !{ path_beg /.well-known/acme-challenge/ }
  default_backend certbot_backend

frontend app_frontend
  # Keys from https://wiki.mozilla.org/Security/Server_Side_TLS
  bind 0.0.0.0:443 ssl crt /etc/haproxy/ssl.pem ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK
  http-response add-header Strict-Transport-Security max-age=31536000
  http-request add-header X-Forwarded-Proto https
  default_backend app_backend

backend certbot_backend
  # 1. Certbot starts, and listens on 8081
  # 2. Certbot tells letsencrypt to request from /.well-known/acme-challenge/
  # 3. Letsencrypt sends request to us
  # 4. Haproxy proxies the request to certbot
  server certbot 127.0.0.1:8081

backend app_backend
  server app 127.0.0.1:3000
