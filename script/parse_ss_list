#!/usr/bin/env ruby
#
# Script to populate the database from old Excel sheets
#
# The Excel sheets had data in a special format, and if the Excel sheets no
# longer exist this script is no longer useful beyond as an educational tool.
#
# The script was run as follows:
#
# 1. Export the school list to CSV
# 2. Run the script to make sure there will be no errors (e.g., missing region)
# 3. Run the script again with --really
# 4. Verify all data is okay
# 5. Repeat steps 2, 3 with RAILS_ENV=production

require File.dirname(__FILE__) + '/../config/boot'
require File.dirname(__FILE__) + '/../config/environment'
require 'console_app'

require 'optparse'
require 'csv'

User.current_user = User.find_by_login('admin') # for updated_by

options = { :file => nil }
OptionParser.new do |opt|
  opt.banner = 'Usage: parse_ss_script [options]'
  opt.on('-f', '--file=', 'Specify input file') { |v| options[:file] = v }
  opt.on('-r', '--really', 'Actually modify the DB') { |v| options[:really] = true }
  opt.parse!(ARGV)
end

if not options[:file]
  puts 'Please specify a filename'
  exit
end

customer_type = CustomerType.find_by_name('Secondary School')
publication = Publication.find_by_name('Fema')
delivery_method_uc = DeliveryMethod.find_by_name('Up-Country')
delivery_method_dar = DeliveryMethod.find_by_name('Dar es Salaam')

if (customer_type.nil? \
    or publication.nil? \
    or delivery_method_uc.nil? \
    or delivery_method_dar.nil?)
  puts 'One or more of the following are not in the database:'
  puts ' - CustomerType: "Secondary School"'
  puts ' - Publication: "Fema"'
  puts ' - DeliveryMethod: "Up-Country"'
  puts ' - DeliveryMethod: "Dar es Salaam"'
  puts 'Ensure these are in the database, and run this script again'
  exit 1
end

CSV::Reader.parse(File.open(options[:file], 'rb')) do |row|
  next if row.length < 4 or row[0].nil? or row[0] == 'No.'
  region_name = row[1].strip.capitalize
  region_name = 'Dar es Salaam' if region_name == 'Dsm'
  school_name = row[2].tr('*','').strip
  num_copies = row[3].to_i

  region = Region.find_by_name(region_name)

  if region.nil?
    puts "There is no Region, '#{region_name}'!"
    if options[:really]
      puts 'Even worse, you specified --force! Now the database is screwy.'
      puts "Undo the mess you made, add Region '#{region_name}', and try again."
    end
    puts 'Fatal error; exiting'
    exit 1
  end

  delivery_method = region.name == 'Dar es Salaam' ? delivery_method_dar : delivery_method_uc

  puts "Creating #{school_name} (#{region.name})... -- #{num_copies} by #{delivery_method.name}"

  if options[:really]
    customer = Customer.create({
        :name => school_name,
        :customer_type_id => customer_type.id,
        :region_id => region.id,
        :delivery_method_id => delivery_method.id })
    pr = Subscription.create({
        :customer_id => customer.id,
        :publication_id => publication.id,
        :num_copies => num_copies })
    customer.save!
    pr.save!
  end
end

if not options[:really]
  puts 'Now run again, with --really'
end
