#!/usr/bin/env ruby

require_relative '../config/boot'
require_relative '../config/environment'

def sql(s)
  User.connection.execute(s)
end

#for table in %w(bulk_order_creators clubs customer_notes customer_types customers delivery_methods districts issue_box_sizes issue_notes issues orders publications regions roles roles_users standing_orders users waiting_orders)
#  sql("DELETE FROM #{table} WHERE deleted_at IS NOT NULL")
#  sql("ALTER TABLE #{table} DROP COLUMN deleted_at")
#end
#
#sql("DELETE FROM standing_orders WHERE customer_id NOT IN (SELECT id FROM customers)")
#sql("DELETE FROM waiting_orders WHERE customer_id NOT IN (SELECT id FROM customers)")
#sql("DELETE FROM issues WHERE publication_id NOT IN (SELECT id FROM publications)")
#sql("DELETE FROM orders WHERE issue_id NOT IN (SELECT id FROM issues)")
#sql("DELETE FROM orders WHERE customer_id NOT IN (SELECT id FROM customers)")
#sql("UPDATE orders SET standing_order_id = NULL WHERE standing_order_id NOT IN (SELECT id FROM standing_orders)")
#
#sql("ALTER TABLE delivery_methods DROP COLUMN warehouse_id")
#sql("DROP TABLE warehouses")
#
#sql("ALTER TABLE customers ADD COLUMN delivery_address VARCHAR(512) NOT NULL")
#sql("UPDATE customers SET delivery_address = CONCAT_WS(', ', CONCAT('via ', CASE deliver_via WHEN '' THEN NULL ELSE deliver_via END), CASE address WHEN '' THEN NULL ELSE address END, CASE route WHEN '' THEN NULL ELSE route END, CONCAT('p.o. box ', CASE po_box WHEN '' THEN NULL ELSE po_box END))")
#sql("ALTER TABLE customers DROP COLUMN deliver_via, DROP COLUMN route, DROP COLUMN po_box, DROP COLUMN address")
#
#sql("ALTER TABLE orders ADD COLUMN region VARCHAR(255) NOT NULL") # dunno why MySQL allows NOT NULL here, but let's go with it
#sql("UPDATE orders SET region = (SELECT name FROM regions WHERE id = orders.region_id)")
#sql("ALTER TABLE orders DROP COLUMN region_id")
#sql("ALTER TABLE orders ADD COLUMN delivery_method VARCHAR(255) NOT NULL") # NOT NULL, weird, yup
#sql("UPDATE orders SET delivery_method = (SELECT name FROM delivery_methods WHERE id = orders.delivery_method_id)")
#sql("ALTER TABLE orders DROP COLUMN delivery_method_id")
#sql("UPDATE orders SET contact_details = CONCAT_WS(': ', contact_name, contact_details)")
#sql("ALTER TABLE orders DROP COLUMN contact_name")
#sql("ALTER TABLE orders CHANGE deliver_via delivery_address VARCHAR(512) NOT NULL")
#sql("ALTER TABLE publications DROP COLUMN packing_hints")
#sql("ALTER TABLE issues DROP COLUMN packing_hints")
#sql("ALTER TABLE issues DROP COLUMN quantity")
#sql("ALTER TABLE issues DROP COLUMN price")
#sql("ALTER TABLE delivery_methods DROP COLUMN include_in_distribution_quote_request")
#
#sql("DROP TABLE delayed_jobs")
#sql("DROP TABLE versions")
#
#sql("ALTER TABLE issues ADD COLUMN box_sizes VARCHAR(255) NOT NULL")
#sql("UPDATE issues SET box_sizes = (SELECT GROUP_CONCAT(num_copies ORDER BY num_copies SEPARATOR ', ') FROM issue_box_sizes WHERE issue_id = issues.id)")
#sql("DROP TABLE issue_box_sizes")
#
#sql("ALTER TABLE customers ADD COLUMN sms_numbers VARCHAR(255) NOT NULL DEFAULT '', ADD COLUMN club_sms_numbers VARCHAR(255) NOT NULL DEFAULT '', ADD COLUMN old_sms_numbers VARCHAR(255) NOT NULL DEFAULT '', ADD COLUMN old_club_sms_numbers VARCHAR(255) NOT NULL DEFAULT '', ADD COLUMN student_sms_numbers VARCHAR(255) NOT NULL DEFAULT '', ADD COLUMN other_contacts VARCHAR(255) NOT NULL DEFAULT ''")
#sql("UPDATE customers SET other_contacts = CONCAT_WS('; ', contact_position, telephone_1, telephone_2, telephone_3, email_1, email_2, website, fax)")
#sql("ALTER TABLE customers DROP COLUMN full_name, DROP COLUMN contact_position, DROP COLUMN telephone_1, DROP COLUMN telephone_2, DROP COLUMN telephone_3, DROP COLUMN email_1, DROP COLUMN email_2, DROP COLUMN website, DROP COLUMN fax")
#
sql("""
  INSERT INTO customer_notes (customer_id, created_at, created_by, note)
  SELECT
    customer_id,
    NOW(),
    2,
    CONCAT_WS('\n', 'h4. Deleted old club information\n\nWe used to show this club information on this page, but it is probably obsolete. Now we use Telerivet surveys instead.\n',
      CONCAT('- Inserted := ', created_at),
      CONCAT('- Name := ', CASE name WHEN '' THEN NULL ELSE name END),
      CONCAT('- Telephone 1 := ', CASE telephone_1 WHEN '' THEN NULL ELSE telephone_1 END),
      CONCAT('- Telephone 2 := ', CASE telephone_2 WHEN '' THEN NULL ELSE telephone_2 END),
      CONCAT('- Email := ', CASE email WHEN '' THEN NULL ELSE email END),
      CONCAT('- Number of members := ', CASE num_members WHEN 0 THEN NULL ELSE num_members END),
      CONCAT('- Date founded := ', date_founded),
      CONCAT('- Motto := ', CASE motto WHEN '' THEN NULL ELSE motto END),
      CONCAT('- Objective := ', CASE objective WHEN '' THEN NULL ELSE objective END),
      CONCAT('- Eligibility := ', CASE eligibility WHEN '' THEN NULL ELSE eligibility END),
      CONCAT('- Work plan := ', CASE work_plan WHEN '' THEN NULL ELSE work_plan END),
      CONCAT('- Patron := ', CASE patron WHEN '' THEN NULL ELSE patron END),
      CONCAT('- Intended duty := ', CASE intended_duty WHEN '' THEN NULL ELSE intended_duty END),
      CONCAT('- Founding motivation := ', CASE founding_motivation WHEN '' THEN NULL ELSE founding_motivation END),
      CONCAT('- Cooperation ideas := ', CASE cooperation_ideas WHEN '' THEN NULL ELSE cooperation_ideas END)
    )
  FROM clubs
""")
sql('DROP TABLE clubs')
